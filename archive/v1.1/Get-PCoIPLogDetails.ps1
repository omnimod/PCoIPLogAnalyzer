param(
	[Parameter(Mandatory=$True,Position=1)]
	[String] $FilePath,
	
	[Parameter(Position=2)]	
	[String] $ResultPath,
	
	[switch] $ExportHTML,
	[switch] $NoScreenOutput,
	
	[Int] $MaxSamples = 500
)

function Get-StardDate {
	param([Array] $Log)
	
	$StringDate = $Log[0].Substring(0, 29)
	return [convert]::ToDateTime($StringDate)
}

function Get-EndDate {
	param([Array] $Log)
	
	$StringDate = $Log[$_.Count-1].Substring(0, 29)
	return [convert]::ToDateTime($StringDate)
}

function Get-NetStatistics {
	param([Array] $Log)
	
	$Stats = $Log | Select-String "VGMAC :Stat frms:" -SimpleMatch
	
	$NetStatistics = @()
	
	foreach ($Stat in $Stats) {
		##VGMAC :Stat frms: R=000000/000000/006997  T=000177/000574/006805 (A/I/O) Loss=0.10%/0.20% (R/T)
		##A/I/O - audio, image, other
		$Date = $Stat.ToString().Substring(0, 29)
		$RXBandwidthData = (($Stat -split "R=")[1] -split " ")[0] -split "/"
		
		$TXBandwidthData = (($Stat -split "T=")[1] -split " ")[0] -split "/"

		$LossData = (($Stat -split "Loss=")[1] -split " ")[0] -split "/"
		
		$NetSample = @{
			Date = [convert]::ToDateTime($Date)
			RXAudio = [convert]::ToInt32($RXBandwidthData[0], 10)
			RXImage = [convert]::ToInt32($RXBandwidthData[1], 10)
			RXOther = [convert]::ToInt32($RXBandwidthData[2], 10)
			
			TXAudio = [convert]::ToInt32($TXBandwidthData[0], 10)
			TXImage = [convert]::ToInt32($TXBandwidthData[1], 10)
			TXOther = [convert]::ToInt32($TXBandwidthData[2], 10)
			
			RXLoss = [System.Math]::Round([float]($LossData[0].Replace("%","")), 2)
			TXLoss = [System.Math]::Round([float]($LossData[1].Replace("%","")), 2)
		}
		
		$NetStatistics +=  New-Object PSObject -Property $NetSample
	}
	
	return $NetStatistics;
}

function Get-SessionDuration {
	param([Array] $Log)
	
	$Stats = $Log | Select-String "MGMT_IMG :Image stats: Elapsed session time" -SimpleMatch
	
	$Duration = 0
	
	foreach ($Stat in $Stats) {
		$Duration += [int](($Stat -split "Elapsed session time = ")[1] -split " ")[0]
	}
	
	return $Duration
}

function Get-SessionLatencyStatistics {
	param([Array] $Log)
	$Stats = $Log | Select-String "MGMT_PCOIP_DATA :Tx thread info: round trip time (ms)" -SimpleMatch
	
	$LatencyStatistics = @()

	foreach ($Stat in $Stats) {
		# MGMT_PCOIP_DATA :Tx thread info: round trip time (ms) =   5, variance =   2, rto = 107, last =   6, max =  52
		
		$Date = $Stat.ToString().Substring(0, 29)
		$AVGLatency = (($Stat -split "=")[1] -split ",")[0]
		$MAXLatency = ($Stat -split "max =")[1]
		
		$LatencySample = @{
			Date = [convert]::ToDateTime($Date)
			AVGLatency = [System.Math]::Round([float]($AVGLatency.Replace(" ", "")), 2)
			MAXLatency = [System.Math]::Round([float]($MAXLatency.Replace(" ", "")), 2)
		}		
		
		$LatencyStatistics += New-Object PSObject -Property $LatencySample
	}
	
	return $LatencyStatistics
}

function Get-BandwidthStatistics {
	param([Array] $Log)
	
	$Stats = $Log | Select-String "MGMT_PCOIP_DATA :Tx thread info: bw limit" -SimpleMatch
	
	$BandwidthStatistics = @()
	
	foreach ($Stat in $Stats) {
		#MGMT_PCOIP_DATA :Tx thread info: bw limit = 1169, avg tx = 74.4, avg rx = 5.9 (KBytes/s)
		
		$Date = $Stat.ToString().Substring(0, 29)		
		$BWLimit = (($Stat -split "bw limit =")[1] -split ",")[0]
		$AVGTX = (($Stat -split "avg tx =")[1] -split ",")[0]
		$AVGRX = (($Stat -split "avg rx = ")[1] -split " ")[0]
		
		$BandwidthSample = @{
			Date = [convert]::ToDateTime($Date)
			BWLimit = [System.Math]::Round([float]$BWLimit, 2)
			AVGTX = [System.Math]::Round([float]$AVGTX, 2)
			AVGRX = [System.Math]::Round([float]$AVGRX, 2)
		}
		
		$BandwidthStatistics += New-Object PSObject -Property $BandwidthSample
	}
	
	return $BandwidthStatistics
}

function Get-PCoIPStatistics {
	param([Array] $Log)
	$Stats = $Log | Select-String "MGMT_IMG :log (SoftIPC): tbl" -SimpleMatch
	
	$PCoIPStatistics = @()
	
	foreach ($Stat in $Stats) {
		# MGMT_IMG :log (SoftIPC): tbl 2 fps 9.56 quality 70

		$Date = $Stat.ToString().Substring(0, 29)			
		$TBL = (($Stat -split "tbl ")[1] -split " ")[0]
		$FPS = (($Stat -split "fps ")[1] -split " ")[0]
		$Quality = ($Stat -split "quality ")[1]

		$PCoIPSample = @{
			Date = [convert]::ToDateTime($Date)
			TBL = [System.Math]::Round([float]$TBL, 2)
			FPS = [System.Math]::Round([float]$FPS, 2)
			Quality = [float]$Quality
		}
		
		$PCoIPStatistics += New-Object PSObject -Property $PCoIPSample
	}	
	
	return $PCoIPStatistics	
}

function Get-PCoIPEncodingStatistics {
	param([Array] $Log)
	
	$Stats = $Log | Select-String "MGMT_IMG :log (SoftIPC):  bits/pixel" -SimpleMatch

	$PCoIPEncodingStatistics = @()
	
	foreach ($Stat in $Stats) {
		# MGMT_IMG :log (SoftIPC):  bits/pixel - 1.01, bits/sec - 391077.40, MPix/sec - 0.39

		$Date = $Stat.ToString().Substring(0, 29)		
		$BitsPerPixel = (($Stat -split "bits/pixel - ")[1] -split ",")[0]
		$BitsPerSec = (($Stat -split "bits/sec - ")[1] -split ",")[0]
		$MegaPixPerSec = ($Stat -split "MPix/sec - ")[1]
		
		$PCoIPEncodingSample = @{
			Date = [convert]::ToDateTime($Date)
			BitsPerPixel = [float]$BitsPerPixel
			BitsPerSec = [float]$BitsPerSec
			MegaPixPerSec = [float]$MegaPixPerSec
		}
		
		$PCoIPEncodingStatistics += New-Object PSObject -Property $PCoIPEncodingSample
	}
	
	return $PCoIPEncodingStatistics	
}

function Resize-Array {
	param([Array] $Arr, [Int] $MaxSamples)
	
	$size = $Arr.Count
	
	if ($size -lt $MaxSamples) {
		return $Arr
	}
	
	$ResizeArray = @()
	
	for ($i = 0; $i -lt $size; $i += [math]::Ceiling($size/$MaxSamples)) {
		$ResizedArray = [Array]$ResizedArray + $Arr[$i]
	}	
	
	return $ResizedArray	
}

function Serialize-Array {
	param([Array] $Arr)
	
	$Serial = ""
	$First = $true
	
	foreach($Num in $Arr) {
	
		if($First) {
			$First = $false
		} else {
			$Serial += ", "
		}
		
		# Formatting based on Num type
		$NumFormat=""
		
		if($Num.GetType().Name -eq "DateTime") {
			$NumFormat = "g"
		} elseif($Num.GetType().Name -eq "Double") {
			$NumFormat = "f2"
		} else {
			$NumFormat = "f0"
		}
		
		$Serial += "'" + $Num.ToString($NumFormat, $enUS) + "'"

	}
	
	return $Serial
}

function Update-Template {
	param([Array] $Template, [String] $oldstring, [String] $newstring)

	$Num = 0
	
	for ($i=0; $i -lt $Template.Count; $i++) {
		if($Template[$i].Contains($oldstring) -eq $true) {
			$Num = $i
			break
		}
	}

	$Template[$Num] = $Template[$Num].Replace($oldstring, $newstring)
	return $Template
}

if(!$FilePath) {
	Write-Host "Specify path to a log file with -Filepath argument"
	break
}

$EncodedTemplate = ""

$Template = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($EncodedTemplate))

$enUS = New-Object System.Globalization.CultureInfo("en-US")

$OutputDetails = @()

$LogFile = Get-Item $FilePath
$Log = Get-Content $LogFile

# Generate Report
$OutputDetails += "====================================General Info====================================="
$OutputDetails += ""

$LogFileName = $LogFile.Name
$OutputDetails += "Log file: " + $LogFileName

# Get PCoIP Server DNS Name
$PCoIPServerName = (($Log | Select-String "pcoip.default_target_sni") -split "pcoip.default_target_sni = ")[1]
$OutputDetails += "Server name: " + $PCoIPServerName

# Get PCoIP Server IP Address
$PCoIPServerAddress = (($Log | Select-String "pcoip.ip_address") -split "pcoip.ip_address = ")[1]
$OutputDetails += "Server IP Address: " + $PCoIPServerAddress

# Get Client IP address
$PCoIPClientAddress = (($Log | Select-String "Incoming session with") -split "Incoming session with: ")[1]
$OutputDetails += "PCoIP Client IP address: " + $PCoIPClientAddress

# Get PCoIP Session encryption
$PCoIPSessionEncryption = (($Log | Select-String "Setting encryption to") -split "Setting encryption to ")[1]
$OutputDetails += "Encryption algorythm: " + $PCoIPSessionEncryption

# Get session start and end time
$StardDate = (Get-StardDate -Log $Log).ToString()
$OutputDetails += "Session start time: " + $StardDate

$EndDate = (Get-EndDate -Log $Log).ToString()
$OutputDetails += "Session end time: " + $EndDate

# Get Session duration
$PCoIPSessionDuration = Get-SessionDuration($Log)
$OutputDetails += "PCoIP Session duration: " + "{0:N0}" -f $PCoIPSessionDuration + " seconds"
$OutputDetails += ""

# Get session network usage and loss statistics (RX Audio/Image/Other, TX Audio/Image/Other, RX Loss, TX Loss)
$OutputDetails += "=================================Network statistics=================================="
$NetStatistics = Get-NetStatistics -Log $Log

$RXAudioTotal = ($NetStatistics[$_.Count-1].RXAudio)
$RXImageTotal = ($NetStatistics[$_.Count-1].RXImage)
$RXOtherTotal = ($NetStatistics[$_.Count-1].RXOther)
$RXTotal = $RXAudioTotal + $RXImageTotal + $RXOtherTotal

$TXAudioTotal = ($NetStatistics[$_.Count-1].TXAudio)
$TXImageTotal = ($NetStatistics[$_.Count-1].TXImage)
$TXOtherTotal = ($NetStatistics[$_.Count-1].TXOther)
$TXTotal = $TXAudioTotal + $TXImageTotal + $TXOtherTotal

$MAXRXLoss = ($NetStatistics.RXLoss | Measure-Object -Maximum).Maximum
$AVGRXLoss = [System.Math]::Round(($NetStatistics.RXLoss | Measure-Object -Average).Average, 2)

$MAXTXLoss = ($NetStatistics.TXLoss | Measure-Object -Maximum).Maximum
$AVGTXLoss = [System.Math]::Round(($NetStatistics.TXLoss | Measure-Object -Average).Average, 2)

# Resize arrays
$NetStatistics = Resize-Array -Arr $NetStatistics -MaxSamples $MaxSamples

$OutputDetails += $NetStatistics | ft  Date,
	@{Label="RX Audio, Packets"; Expression={$_.RXAudio}},
	@{Label="RX Image, Packets"; Expression={$_.RXImage}},
	@{Label="RX Other, Packets"; Expression={$_.RXOther}},
	@{Label="RX Total, Packets"; Expression={$_.RXAudio + $_.RXImage + $_.RXOther}},
	@{Label="TX Audio, Packets"; Expression={$_.TXAudio}},
	@{Label="TX Image, Packets"; Expression={$_.TXImage}},
	@{Label="TX Other, Packets"; Expression={$_.TXOther}},
	@{Label="TX Total, Packets"; Expression={$_.TXAudio + $_.TXImage + $_.TXOther}} -AutoSize 4>&1

$OutputDetails += "Total RX (Audio): " + "{0:N2}" -f $RXAudioTotal + " Packets"
$OutputDetails += "Total RX (Image): " + "{0:N2}" -f $RXImageTotal + " Packets"
$OutputDetails += "Total RX (Other): " + "{0:N2}" -f $RXOtherTotal + " Packets"
$OutputDetails += "Total RX: " + "{0:N2}" -f $RXTotal + " Packets"
$OutputDetails += ""

$OutputDetails += "Total TX (Audio): " + "{0:N2}" -f $TXAudioTotal + " Packets"
$OutputDetails += "Total TX (Image): " + "{0:N2}" -f $TXImageTotal + " Packets"
$OutputDetails += "Total TX (Other): " + "{0:N2}" -f $TXOtherTotal + " Packets"
$OutputDetails += "Total TX: " + "{0:N2}" -f $TXTotal + " Packets"
$OutputDetails += ""

# Get Session Bandwidth statistics (Bandwidth limit, AVG TX, AVG RX in KBytes/s)
$OutputDetails += "================================Bandwidth statistics================================="

$BandwidthStatistics = Get-BandwidthStatistics -Log $Log

$AVGRX = [System.Math]::Round(($BandwidthStatistics.AVGRX | Measure-Object -Average).Average, 2)
$AVGTX = [System.Math]::Round(($BandwidthStatistics.AVGTX | Measure-Object -Average).Average, 2)

$BandwidthStatistics = Resize-Array -Arr $BandwidthStatistics -MaxSamples $MaxSamples

$OutputDetails += $BandwidthStatistics | ft Date,@{Label="AVG RX, KB/s"; Expression={$_.AVGRX}},@{Label="AVG TX, KB/s"; Expression={$_.AVGTX}} 4>&1

$OutputDetails += "AVG RX: " + "{0:N2}" -f $AVGRX + " KBytes/s"
$OutputDetails += "AVG TX: " + "{0:N2}" -f $AVGTX + " KBytes/s"
$OutputDetails += ""

# Get Session Loss statistics (RX Loss, TX Loss, Average, Maximum)
$OutputDetails += "==================================Loss statistics===================================="

$OutputDetails += $NetStatistics | ft Date,@{Label="RX Loss, %"; Expression={"{0:P2}" -f ($_.RXLoss/100)}},@{Label="TX Loss, %"; Expression={"{0:P2}" -f ($_.TXLoss/100)}} 4>&1

$OutputDetails += "MAX RX Loss: " + "{0:P2}" -f ($MAXRXLoss/100)
$OutputDetails += "AVG RX Loss: " + "{0:P2}" -f ($AVGRXLoss/100)
$OutputDetails += ""
$OutputDetails += "MAX TX Loss: " + "{0:P2}" -f ($MAXTXLoss/100)
$OutputDetails += "AVG TX Loss: " + "{0:P2}" -f ($AVGTXLoss/100)
$OutputDetails += ""

# Get Latency statistics (AVG Latency, MAX Latency)
$OutputDetails += "=================================Latency statistics=================================="

$LatencyStatistics = Get-SessionLatencyStatistics -Log $Log
$MAXLatency = ($LatencyStatistics.MAXLatency | Measure-Object -Maximum).Maximum
$AVGLatency = [System.Math]::Round(($LatencyStatistics.AVGLatency | Measure-Object -Average).Average, 2)

$LatencyStatistics = Resize-Array -Arr $LatencyStatistics -MaxSamples $MaxSamples

$OutputDetails += $LatencyStatistics | ft Date,@{Label="AVG Latency, ms"; Expression={$_.AVGLatency}},@{Label="MAX Latency, ms"; Expression={$_.MAXLatency}} 4>&1

$OutputDetails += "MAX Latency: " + "{0:N0}" -f $MAXLatency
$OutputDetails += "AVG Latency: " + "{0:N0}" -f $AVGLatency
$OutputDetails += ""

# Get Quality statistics
$OutputDetails += "=================================Quality statistics=================================="
$PCoIPStatistics = Get-PCoIPStatistics -Log $Log

$MAXQuality = ($PCoIPStatistics.Quality | Measure-Object -Maximum).Maximum
$AVGQuality = [System.Math]::Round(($PCoIPStatistics.Quality | Measure-Object -Average).Average, 2)
$MINQuality = ($PCoIPStatistics.Quality | Measure-Object -Minimum).Minimum

$MAXFPS = ($PCoIPStatistics.FPS | Measure-Object -Maximum).Maximum
$AVGFPS = [System.Math]::Round(($PCoIPStatistics.FPS | Measure-Object -Average).Average, 2)
$MINFPS = ($PCoIPStatistics.FPS | Measure-Object -Minimum).Minimum

$PCoIPStatistics = Resize-Array -Arr $PCoIPStatistics -MaxSamples $MaxSamples

$OutputDetails += $PCoIPStatistics | ft Date,@{Label="Quality, %";Expression={"{0:P0}" -f ($_.Quality/100)}} 4>&1

$OutputDetails += "MAX Quality: " + "{0:P0}" -f ($MAXQuality/100)
$OutputDetails += "MIN Quality: " + "{0:P0}" -f ($MINQuality/100)
$OutputDetails += ""

# Get FPS statistics
$OutputDetails += "===================================FPS statistics===================================="
$OutputDetails += $PCoIPStatistics | ft Date,FPS 4>&1

$OutputDetails += "MAX FPS: " + "{0:N2}" -f $MAXFPS
$OutputDetails += "AVG FPS: " + "{0:N2}" -f $AVGFPS
$OutputDetails += "MIN FPS: " + "{0:N2}" -f $MINFPS
$OutputDetails += ""

# End of output
$OutputDetails += "======================="

# Print output on screen
if(!$NoScreenOutput) {
	$OutputDetails
}
	
# Save result to the file
if($ResultPath) {
	if(!$ExportHTML) {
		Write-Output $OutputDetails | Out-File -Encoding utf8 $ResultPath
		Write-Host "Saved results in:" $ResultPath
	} else {
		$HTMLVariables = ""

		# $HTMLVariables += "`$('#var').text(`"$var`");"
		$HTMLVariables += "`$('#LogFileName').text(`"$LogFileName`");"
		$HTMLVariables += "`$('#PCoIPServerName').text(`"$PCoIPServerName`");"
		$HTMLVariables += "`$('#PCoIPServerAddress').text(`"$PCoIPServerAddress`");"
		$HTMLVariables += "`$('#PCoIPClientAddress').text(`"$PCoIPClientAddress`");"
		$HTMLVariables += "`$('#PCoIPSessionEncryption').text(`"$PCoIPSessionEncryption`");"
		$HTMLVariables += "`$('#StardDate').text(`"$StardDate`");"
		$HTMLVariables += "`$('#EndDate').text(`"$EndDate`");"
		$HTMLVariables += "`$('#PCoIPSessionDuration').text(`"$PCoIPSessionDuration`");"

		$HTMLVariables += "`$('#RXAudioTotal').text(`"$RXAudioTotal`");"
		$HTMLVariables += "`$('#RXImageTotal').text(`"$RXImageTotal`");"
		$HTMLVariables += "`$('#RXOtherTotal').text(`"$RXOtherTotal`");"
		$HTMLVariables += "`$('#RXTotal').text(`"$RXTotal`");"
		$HTMLVariables += "`$('#TXAudioTotal').text(`"$TXAudioTotal`");"
		$HTMLVariables += "`$('#TXImageTotal').text(`"$TXImageTotal`");"
		$HTMLVariables += "`$('#TXOtherTotal').text(`"$TXOtherTotal`");"
		$HTMLVariables += "`$('#TXTotal').text(`"$TXTotal`");"

		$HTMLVariables += "`$('#AVGRX').text(`"$AVGRX`");"
		$HTMLVariables += "`$('#AVGTX').text(`"$AVGTX`");"

		$HTMLVariables += "`$('#MAXRXLoss').text(`"$MAXRXLoss`");"
		$HTMLVariables += "`$('#AVGRXLoss').text(`"$AVGRXLoss`");"
		$HTMLVariables += "`$('#MAXTXLoss').text(`"$MAXTXLoss`");"
		$HTMLVariables += "`$('#AVGTXLoss').text(`"$AVGTXLoss`");"

		$HTMLVariables += "`$('#MAXLatency').text(`"$MAXLatency`");"
		$HTMLVariables += "`$('#AVGLatency').text(`"$AVGLatency`");"

		$HTMLVariables += "`$('#MAXQuality').text(`"$MAXQuality`");"
		$HTMLVariables += "`$('#MINQuality').text(`"$MINQuality`");"

		$HTMLVariables += "`$('#MAXFPS').text(`"$MAXFPS`");"
		$HTMLVariables += "`$('#AVGFPS').text(`"$AVGFPS`");"
		$HTMLVariables += "`$('#MINFPS').text(`"$MINFPS`");"

		$Template = Update-Template -Template $Template -oldstring '${Variables}' -newstring $HTMLVariables

		# Update NetworkChart
		$Template = Update-Template -Template $Template -oldstring '${Networkchartlabels}' -newstring (Serialize-Array -Arr $NetStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartRXAudio}' -newstring (Serialize-Array -Arr $NetStatistics.RXAudio)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartRXImage}' -newstring (Serialize-Array -Arr $NetStatistics.RXImage)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartRXOther}' -newstring (Serialize-Array -Arr $NetStatistics.RXOther)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartTXAudio}' -newstring (Serialize-Array -Arr $NetStatistics.TXAudio)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartTXImage}' -newstring (Serialize-Array -Arr $NetStatistics.TXImage)
		$Template = Update-Template -Template $Template -oldstring '${NetworkchartTXOther}' -newstring (Serialize-Array -Arr $NetStatistics.TXOther)

		$Template = Update-Template -Template $Template -oldstring '${Bandwidthchartlabels}' -newstring (Serialize-Array -Arr $BandwidthStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${BandwidthchartAVGRX}' -newstring (Serialize-Array -Arr $BandwidthStatistics.AVGRX)
		$Template = Update-Template -Template $Template -oldstring '${BandwidthchartAVGTX}' -newstring (Serialize-Array -Arr $BandwidthStatistics.AVGTX)

		$Template = Update-Template -Template $Template -oldstring '${Losschartlabels}' -newstring (Serialize-Array -Arr $NetStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${LosschartRXLoss}' -newstring (Serialize-Array -Arr $NetStatistics.RXLoss)
		$Template = Update-Template -Template $Template -oldstring '${LosschartTXLoss}' -newstring (Serialize-Array -Arr $NetStatistics.TXLoss)

		$Template = Update-Template -Template $Template -oldstring '${Latencychartlabels}' -newstring (Serialize-Array -Arr $LatencyStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${LatencychartMAXLatency}' -newstring (Serialize-Array -Arr $LatencyStatistics.MAXLatency)
		$Template = Update-Template -Template $Template -oldstring '${LatencychartAVGLatency}' -newstring (Serialize-Array -Arr $LatencyStatistics.AVGLatency)

		$Template = Update-Template -Template $Template -oldstring '${Qualitychartlabels}' -newstring (Serialize-Array -Arr $PCoIPStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${QualitychartQuality}' -newstring (Serialize-Array -Arr $PCoIPStatistics.Quality)

		$Template = Update-Template -Template $Template -oldstring '${FPSchartlabels}' -newstring (Serialize-Array -Arr $PCoIPStatistics.Date)
		$Template = Update-Template -Template $Template -oldstring '${FPSchartFPS}' -newstring (Serialize-Array -Arr $PCoIPStatistics.FPS)

		Write-Output $Template | Out-File -Encoding utf8 $ResultPath
		
		Write-Host "Saved results in:" $ResultPath
	}
}
